<%- contentFor('body') %>

<div class="min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8">
  <!-- Sticky Header (Optional) -->
  <div class="sticky top-0 z-10 bg-white shadow-md p-4 mb-6 rounded-lg">
    <h2 class="text-xl font-bold text-center text-gray-800">Form ƒëƒÉng k√Ω / Registration</h2>
  </div>

  <div class="max-w-lg mx-auto">
    <form id="registration-form" class="space-y-4">
      <input type="hidden" name="conferenceCode" value="<%= conference.code %>">

      <% /* --- Redesigned Fields based on Image --- */ %>
      
<!-- Mobile Field -->
      <div class="flex items-center space-x-3">
        <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-xl shadow"><span>üìû</span></div>
        <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
          <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
            <div class="font-bold text-sm leading-tight whitespace-nowrap">ƒêi·ªán tho·∫°i</div>
            <div class="text-xs leading-tight whitespace-nowrap">Mobile</div>
          </div>
          <input type="tel" id="phone" name="phone" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="S·ªë ƒëi·ªán tho·∫°i" required>
          <div class="flex items-center flex-shrink-0 pr-4 pl-1 text-xs">
            <span class="text-gray-500 whitespace-nowrap">* B·∫Øt bu·ªôc</span>
            <span class="text-red-500 ml-1">*</span>
          </div>
        </div>
      </div>

      <!-- Nationality/Country Field -->
      <% if (registrationFields.includes('nationality')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-xl shadow"><span>üåç</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Qu·ªëc gia</div>
              <div class="text-xs leading-tight whitespace-nowrap">Country</div>
            </div>
            <input type="text" id="nationality" name="nationality" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Qu·ªëc t·ªãch">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
        </div>
      <% } %>

      <!-- Full Name Field -->
      <div class="flex items-center space-x-3">
        <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-xl shadow"><span>‚úèÔ∏è</span></div>
        <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
          <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
            <div class="font-bold text-sm leading-tight whitespace-nowrap">H·ªç & t√™n</div>
            <div class="text-xs leading-tight whitespace-nowrap">Full name</div>
          </div>
          <input type="text" id="name" name="name" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="H·ªç t√™n" required>
          <div class="flex items-center flex-shrink-0 pr-4 pl-1 text-xs">
            <span class="text-gray-500 whitespace-nowrap">* B·∫Øt bu·ªôc</span>
            <span class="text-red-500 ml-1">*</span>
          </div>
        </div>
      </div>

      
      
      <!-- Email Field -->
      <div class="flex items-center space-x-3">
        <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-xl shadow"><span>‚úâÔ∏è</span></div>
        <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
          <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
            <div class="font-bold text-sm leading-tight whitespace-nowrap">Email</div>
            <div class="text-xs leading-tight whitespace-nowrap">Email</div>
          </div>
          <input type="email" id="email" name="email" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Email" required>
          <div class="flex items-center flex-shrink-0 pr-4 pl-1 text-xs">
            <span class="text-gray-500 whitespace-nowrap">* B·∫Øt bu·ªôc</span>
            <span class="text-red-500 ml-1">*</span>
          </div>
        </div>
      </div>

      <!-- Address Field -->
      <% if (registrationFields.includes('address')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-xl shadow"><span>üìç</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">ƒê·ªãa ch·ªâ</div>
              <div class="text-xs leading-tight whitespace-nowrap">Address</div>
            </div>
            <input type="text" id="address" name="address" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="ƒê·ªãa ch·ªâ" required>
            <div class="flex items-center flex-shrink-0 pr-4 pl-1 text-xs">
                <span class="text-gray-500 whitespace-nowrap">* B·∫Øt bu·ªôc</span>
                <span class="text-red-500 ml-1">*</span>
            </div>
          </div>
        </div>
      <% } %>
      
      <% /* --- Other Fields (applying similar styling) --- */ %>

      <% if (registrationFields.some(field => ['age', 'business', 'workunit', 'rank', 'academic', 'role'].includes(field))) { %>
        <hr class="my-6 border-gray-300">
        <h3 class="text-lg font-semibold text-center text-gray-700 mb-4">Th√¥ng tin b·ªï sung / Additional Information</h3>
      <% } %>

      <!-- Work Unit -->
      <% if (registrationFields.includes('workunit')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üè¢</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">ƒê∆°n v·ªã</div>
              <div class="text-xs leading-tight whitespace-nowrap">Work Unit</div>
            </div>
            <div class="flex-grow flex items-center px-2">
              <select id="workunit-type" name="workunitType" class="bg-transparent focus:outline-none text-gray-700 text-sm py-3 pr-2 flex-initial" style="min-width: 90px;">
                <option value="H·ªçc vi·ªán">H·ªçc vi·ªán</option>
                <option value="ƒê∆°n v·ªã ngo√†i">ƒê∆°n v·ªã ngo√†i</option>
              </select>
              <span class="text-gray-400 mx-1">|</span>
              <input type="text" id="workunit-detail" name="workunitDetail" placeholder="T√™n ƒë∆°n v·ªã" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 py-3 text-sm">
            </div>
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
        </div>
      <% } %>

      <!-- Rank -->
      <% if (registrationFields.includes('rank')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üéñÔ∏è</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">C·∫•p b·∫≠c</div>
              <div class="text-xs leading-tight whitespace-nowrap">Rank</div>
            </div>
            <input type="text" id="rank" name="rank" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="4//">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
        </div>
      <% } %>

      <!-- Academic -->
      <% if (registrationFields.includes('academic')) { %>
         <div class="flex items-center space-x-3 relative">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üéì</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">H·ªçc h√†m/v·ªã</div>
              <div class="text-xs leading-tight whitespace-nowrap">Academic</div>
            </div>
            <input type="text" id="academic" name="academic" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Ch·ªçn h·ªçc h√†m/v·ªã">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
          <!-- Checkbox container -->
          <div id="academic-checkbox-container" class="absolute top-full left-0 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg p-3 z-20 hidden" style="margin-left: calc(3rem + 0.75rem); max-width: calc(100% - 3rem - 0.75rem);">
            <div class="grid grid-cols-2 sm:grid-cols-3 gap-2">
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="checkbox" name="academic_option" value="C·ª≠ nh√¢n" class="academic-option-cb form-checkbox h-4 w-4 text-blue-600 rounded">
                <span class="text-sm text-gray-700">C·ª≠ nh√¢n</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="checkbox" name="academic_option" value="ThS" class="academic-option-cb form-checkbox h-4 w-4 text-blue-600 rounded">
                <span class="text-sm text-gray-700">ThS.</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="checkbox" name="academic_option" value="TS" class="academic-option-cb form-checkbox h-4 w-4 text-blue-600 rounded">
                <span class="text-sm text-gray-700">TS.</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="checkbox" name="academic_option" value="PGS" class="academic-option-cb form-checkbox h-4 w-4 text-blue-600 rounded">
                <span class="text-sm text-gray-700">PGS.</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="checkbox" name="academic_option" value="GS" class="academic-option-cb form-checkbox h-4 w-4 text-blue-600 rounded">
                <span class="text-sm text-gray-700">GS.</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="checkbox" name="academic_option" value="Kh√°c" class="academic-option-cb form-checkbox h-4 w-4 text-blue-600 rounded">
                <span class="text-sm text-gray-700">Kh√°c</span>
              </label>
            </div>
          </div>
        </div>
      <% } %>

      <!-- Position -->
      <% if (registrationFields.includes('position')) { %>
        <div class="flex items-center space-x-3 relative">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üëî</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Ch·ª©c v·ª•</div>
              <div class="text-xs leading-tight whitespace-nowrap">Position</div>
            </div>
            <input type="text" id="position" name="position" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Ch·ªçn ho·∫∑c nh·∫≠p ch·ª©c v·ª•">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
          <!-- Position Checkbox container -->
          <div id="position-checkbox-container" class="absolute top-full left-0 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg p-3 z-20 hidden" style="margin-left: calc(3rem + 0.75rem); max-width: calc(100% - 3rem - 0.75rem);">
            <div class="grid grid-cols-2 sm:grid-cols-3 gap-2">
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="Gƒê" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">Gƒê</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="PGƒê" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">PGƒê</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="CNK" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">CNK</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="PCNK" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">PCNK</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="CNBM" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">CNBM</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="PCNBM" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">PCNBM</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="Gi·∫£ng vi√™n" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">Gi·∫£ng vi√™n</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="position_option" value="Kh√°c" class="position-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">Kh√°c</span>
              </label>
            </div>
          </div>
        </div>
      <% } %>

      <!-- Speciality -->
      <% if (registrationFields.includes('speciality')) { %>
        <div class="flex items-center space-x-3 relative">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üî¨</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Chuy√™n ng√†nh</div>
              <div class="text-xs leading-tight whitespace-nowrap">Speciality</div>
            </div>
            <input type="text" id="speciality" name="speciality" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Ch·ªçn ho·∫∑c nh·∫≠p chuy√™n ng√†nh">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
           <!-- Speciality Radiobutton container -->
          <div id="speciality-radio-container" class="absolute top-full left-0 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg p-3 z-20 hidden" style="margin-left: calc(3rem + 0.75rem); max-width: calc(100% - 3rem - 0.75rem);">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-2">
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="speciality_option" value="Chuy√™n gia gi√°o d·ª•c" class="speciality-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">Chuy√™n gia gi√°o d·ª•c</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="speciality_option" value="Qu·∫£n l√Ω" class="speciality-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">Qu·∫£n l√Ω</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="speciality_option" value="GV Y h·ªçc s·ª©c kh·ªèe" class="speciality-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">GV Y h·ªçc s·ª©c kh·ªèe</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="speciality_option" value="CNTT" class="speciality-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">CNTT</span>
              </label>
              <label class="flex items-center space-x-2 p-1 hover:bg-gray-100 rounded">
                <input type="radio" name="speciality_option" value="AI" class="speciality-option-rb form-radio h-4 w-4 text-blue-600">
                <span class="text-sm text-gray-700">AI</span>
              </label>
            </div>
          </div>
        </div>
      <% } %>

      <!-- Age -->
      <% if (registrationFields.includes('age')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üéÇ</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Tu·ªïi</div>
              <div class="text-xs leading-tight whitespace-nowrap">Age</div>
            </div>
            <input type="number" id="age" name="age" min="0" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Tu·ªïi">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
        </div>
      <% } %>

      <!-- Business -->
      <% if (registrationFields.includes('business')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üíº</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Lƒ©nh v·ª±c</div>
              <div class="text-xs leading-tight whitespace-nowrap">Business</div>
            </div>
            <input type="text" id="business" name="business" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="Nh·∫≠p lƒ©nh v·ª±c / Enter field">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
        </div>
      <% } %>

      <!-- Role -->
      <% if (registrationFields.includes('role')) { %>
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üë§</span></div>
          <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Vai tr√≤</div>
              <div class="text-xs leading-tight whitespace-nowrap">Role</div>
            </div>
             <div class="relative flex-grow">
                <select id="role" name="role" class="w-full bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm appearance-none">
                    <option value="Tham d·ª±" selected>Tham d·ª± / Attendee</option>
                    <option value="B√°o c√°o vi√™n">B√°o c√°o vi√™n / Speaker</option>
                </select>
                <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-5 text-gray-700">
                    <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                </div>
            </div>
          </div>
        </div>
      <% } %>

      <% /* --- Checkbox Options --- */ %>
      <% if (registrationFields.some(field => ['speech', 'lunch', 'dinner', 'transport'].includes(field))) { %>
        <hr class="my-6 border-gray-300">
        <h3 class="text-lg font-semibold text-center text-gray-700 mb-4">T√πy ch·ªçn / Options</h3>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <% if (registrationFields.includes('speech')) { %>
            <label class="checkbox-card flex items-center space-x-3 p-4 bg-white rounded-lg border border-gray-200 hover:bg-blue-50 hover:border-blue-200 transition cursor-pointer shadow">
              <input type="checkbox" name="speech" value="true" class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500">
              <span class="text-gray-700">C√≥ ph√°t bi·ªÉu / Will Speak</span>
            </label>
          <% } %>
          <% if (registrationFields.includes('lunch')) { %>
            <label class="checkbox-card flex items-center space-x-3 p-4 bg-white rounded-lg border border-gray-200 hover:bg-blue-50 hover:border-blue-200 transition cursor-pointer shadow">
              <input type="checkbox" name="lunch" value="true" class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500">
              <span class="text-gray-700">ƒÇn tr∆∞a / Lunch</span>
            </label>
          <% } %>
          <% if (registrationFields.includes('dinner')) { %>
            <label class="checkbox-card flex items-center space-x-3 p-4 bg-white rounded-lg border border-gray-200 hover:bg-blue-50 hover:border-blue-200 transition cursor-pointer shadow">
              <input type="checkbox" name="dinner" value="true" class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500">
              <span class="text-gray-700">ƒÇn t·ªëi / Dinner</span>
            </label>
          <% } %>
          <% if (registrationFields.includes('transport')) { %>
            <label class="checkbox-card flex items-center space-x-3 p-4 bg-white rounded-lg border border-gray-200 hover:bg-blue-50 hover:border-blue-200 transition cursor-pointer shadow">
              <input type="checkbox" name="transport" value="true" class="form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500">
              <span class="text-gray-700">Xe v·ªÅ h·ªçc vi·ªán / Transport</span>
            </label>
          <% } %>
        </div>
      <% } %>

      <% /* --- Textarea Fields --- */ %>
       <% if (registrationFields.some(field => ['feedback', 'questions', 'source'].includes(field))) { %>
        <hr class="my-6 border-gray-300">
        <h3 class="text-lg font-semibold text-center text-gray-700 mb-4">Th√¥ng tin kh√°c / Other Info</h3>
      <% } %>

      <% if (registrationFields.includes('feedback')) { %>
        <div class="flex items-start space-x-3">
           <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üìù</span></div>
           <div class="flex-grow bg-gray-200 rounded-xl flex items-stretch shadow-inner overflow-hidden">
             <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm self-stretch" style="min-width: 110px;">
               <div class="font-bold text-sm leading-tight whitespace-nowrap">G√≥p √Ω</div>
               <div class="text-xs leading-tight whitespace-nowrap">Feedback</div>
             </div>
             <textarea id="feedback" name="feedback" rows="3" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm resize-none" placeholder="G√≥p √Ω v·ªÅ c√¥ng t√°c t·ªï ch·ª©c..."></textarea>
             <div class="pr-4 self-stretch"></div> <!-- Right padding -->
           </div>
        </div>
      <% } %>

      <% if (registrationFields.includes('questions')) { %>
        <div class="flex items-start space-x-3">
           <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>‚ùì</span></div>
           <div class="flex-grow bg-gray-200 rounded-xl flex items-stretch shadow-inner overflow-hidden">
             <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm self-stretch" style="min-width: 110px;">
               <div class="font-bold text-sm leading-tight whitespace-nowrap">C√¢u h·ªèi</div>
               <div class="text-xs leading-tight whitespace-nowrap">Questions</div>
             </div>
             <textarea id="questions" name="questions" rows="3" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm resize-none" placeholder="C√¢u h·ªèi cho ban t·ªï ch·ª©c..."></textarea>
             <div class="pr-4 self-stretch"></div> <!-- Right padding -->
           </div>
        </div>
      <% } %>

      <% if (registrationFields.includes('source')) { %>
         <div class="flex items-center space-x-3">
           <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg shadow"><span>üì∞</span></div>
           <div class="flex-grow bg-gray-200 rounded-full flex items-stretch shadow-inner overflow-hidden">
            <div class="flex-shrink-0 bg-blue-600 text-white px-4 flex flex-col justify-center items-center shadow-sm" style="min-width: 110px;">
              <div class="font-bold text-sm leading-tight whitespace-nowrap">Ngu·ªìn</div>
              <div class="text-xs leading-tight whitespace-nowrap">Source</div>
            </div>
            <input type="text" id="source" name="source" class="flex-grow bg-transparent focus:outline-none text-gray-700 placeholder-gray-500 px-4 py-3 text-sm" placeholder="B·∫°n bi·∫øt h·ªôi ngh·ªã t·ª´ ƒë√¢u? / Source">
            <div class="pr-4"></div> <!-- Right padding -->
          </div>
        </div>
      <% } %>

      <!-- Submit Button -->
      <div class="pt-6">
        <button type="submit" class="w-full bg-blue-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition duration-150 ease-in-out flex items-center justify-center shadow-md">
          <span>ƒêƒÉng k√Ω / Submit</span>
           <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path></svg>
        </button>
      </div>
    </form>
  </div>
</div>

<%- contentFor('script') %>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('registration-form');
    
    // Handle checkbox styling on change
    const checkboxCards = document.querySelectorAll('.checkbox-card');
    checkboxCards.forEach(card => {
      const checkbox = card.querySelector('input[type="checkbox"]');
      checkbox.addEventListener('change', function() {
        if (this.checked) {
          card.classList.add('bg-blue-50', 'border-blue-300');
          card.classList.remove('bg-white', 'border-gray-200');
        } else {
          card.classList.remove('bg-blue-50', 'border-blue-300');
          card.classList.add('bg-white', 'border-gray-200');
        }
      });
      // Initial style check in case of back navigation
      if (checkbox.checked) {
         card.classList.add('bg-blue-50', 'border-blue-300');
         card.classList.remove('bg-white', 'border-gray-200');
      }
    });
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const submitBtn = form.querySelector('button[type="submit"]');
      const originalBtnContent = submitBtn.innerHTML; // Store original content
      submitBtn.disabled = true;
      submitBtn.innerHTML = `<svg class="animate-spin h-5 w-5 text-white inline-block mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Processing...`;
      
      try {
        const formData = new FormData(form);
        const data = {};
        formData.forEach((value, key) => {
          // Handle checkboxes - ensure all boolean fields are included
          const checkbox = form.querySelector(`[name="${key}"][type="checkbox"]`);
          if (checkbox) {
            // Checkboxes not present in formData if unchecked, handle explicitly
            data[key] = checkbox.checked;
          } else {
            data[key] = value;
          }
        });

        // Consolidate workunit data if fields exist
        if (data.workunitType && data.workunitDetail) {
          data.workunit = `${data.workunitType} - ${data.workunitDetail}`;
          delete data.workunitType;
          delete data.workunitDetail;
        } else if (data.hasOwnProperty('workunitType')) { 
          // Keep just the type if detail is empty or doesn't exist
          data.workunit = data.workunitType;
          delete data.workunitType;
          delete data.workunitDetail; // Ensure detail is removed
        }
        
        // Ensure boolean conversion for specific checkbox fields expected by backend
        const booleanFields = ['speech', 'lunch', 'dinner', 'transport'];
        booleanFields.forEach(field => {
           if (data.hasOwnProperty(field)) { // Check if the field was included in registrationFields
             data[field] = !!data[field]; // Convert to strict boolean
           }
        });

        console.log("Submitting data:", data); // Debug: Log data before sending

        const response = await fetch('/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          window.location.href = '/thankyou';
        } else {
          showAlert(result.message || 'An error occurred. Please try again.', 'error');
          submitBtn.disabled = false;
          submitBtn.innerHTML = originalBtnContent; // Restore original content
        }
      } catch (error) {
        console.error('Error:', error);
        showAlert('An error occurred. Please try again.', 'error');
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalBtnContent; // Restore original content
    }
    });
    
    // Function to show alert (reusable)
    function showAlert(message, type) {
      // Remove existing alerts first
      document.querySelectorAll('.form-alert').forEach(alert => alert.remove());

      const alertDiv = document.createElement('div');
      alertDiv.className = `form-alert fixed top-5 right-5 z-50 p-4 rounded-lg shadow-lg border max-w-sm ${type === 'error' ? 'bg-red-50 border-red-200 text-red-700' : 'bg-green-50 border-green-200 text-green-700'}`;
      
      alertDiv.innerHTML = `
        <div class="flex items-center">
          <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            ${type === 'error' 
              ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>'
              : '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>'}
          </svg>
          <span class="flex-1">${message}</span>
          <button type="button" class="ml-4 -mr-1 -my-1 text-gray-400 hover:text-gray-700 focus:outline-none" onclick="this.closest('.form-alert').remove()">
             <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
          </button>
        </div>
      `;
      
      document.body.appendChild(alertDiv);
      
      setTimeout(() => {
        alertDiv.remove();
      }, 7000); // Increased timeout
    }

    // Academic field with checkboxes logic
    const academicInput = document.getElementById('academic');
    const academicCheckboxContainer = document.getElementById('academic-checkbox-container');
    const academicOptionCheckboxes = document.querySelectorAll('.academic-option-cb');
    let academicBlurTimeout;

    if (academicInput && academicCheckboxContainer) {
      academicInput.addEventListener('focus', () => {
        clearTimeout(academicBlurTimeout); // Clear any pending blur timeout
        academicCheckboxContainer.classList.remove('hidden');
      });

      academicInput.addEventListener('blur', () => {
        // Delay hiding to allow clicks on checkboxes
        academicBlurTimeout = setTimeout(() => {
          academicCheckboxContainer.classList.add('hidden');
        }, 200); // 200ms delay
      });

      // Prevent blur from hiding container if click is inside container
      academicCheckboxContainer.addEventListener('mousedown', (event) => {
        event.preventDefault(); // Prevent input from losing focus
      });

      academicOptionCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', () => {
          const selectedValues = [];
          academicOptionCheckboxes.forEach(cb => {
            if (cb.checked) {
              selectedValues.push(cb.value);
            }
          });
          academicInput.value = selectedValues.join(', ');
        });
      });
    }

    // Position field with radio button options logic
    const positionInput = document.getElementById('position');
    const positionCheckboxContainer = document.getElementById('position-checkbox-container');
    const positionOptionRadioButtons = document.querySelectorAll('.position-option-rb');
    let positionBlurTimeout;

    if (positionInput && positionCheckboxContainer) {
      positionInput.addEventListener('focus', () => {
        clearTimeout(positionBlurTimeout); // Clear any pending blur timeout
        positionCheckboxContainer.classList.remove('hidden');
      });

      positionInput.addEventListener('blur', () => {
        // Delay hiding to allow clicks on radio buttons
        positionBlurTimeout = setTimeout(() => {
          positionCheckboxContainer.classList.add('hidden');
        }, 200); // 200ms delay
      });

      // Prevent blur from hiding container if click is inside container
      positionCheckboxContainer.addEventListener('mousedown', (event) => {
        event.preventDefault(); // Prevent input from losing focus
      });

      positionOptionRadioButtons.forEach(radio => {
        radio.addEventListener('change', () => {
          if (radio.checked) {
            positionInput.value = radio.value;
            // Optionally hide after selection, or keep it open until blur
            // positionCheckboxContainer.classList.add('hidden'); 
          }
        });
      });
      
      // If user types in the input, uncheck radio buttons
      positionInput.addEventListener('input', () => {
        positionOptionRadioButtons.forEach(radio => {
            radio.checked = false;
        });
      });
    }

    // Speciality field with radio button options logic
    const specialityInput = document.getElementById('speciality');
    const specialityRadioContainer = document.getElementById('speciality-radio-container');
    const specialityOptionRadioButtons = document.querySelectorAll('.speciality-option-rb');
    let specialityBlurTimeout;

    if (specialityInput && specialityRadioContainer) {
      specialityInput.addEventListener('focus', () => {
        clearTimeout(specialityBlurTimeout); // Clear any pending blur timeout
        specialityRadioContainer.classList.remove('hidden');
      });

      specialityInput.addEventListener('blur', () => {
        // Delay hiding to allow clicks on radio buttons
        specialityBlurTimeout = setTimeout(() => {
          specialityRadioContainer.classList.add('hidden');
        }, 200); // 200ms delay
      });

      // Prevent blur from hiding container if click is inside container
      specialityRadioContainer.addEventListener('mousedown', (event) => {
        event.preventDefault(); // Prevent input from losing focus
      });

      specialityOptionRadioButtons.forEach(radio => {
        radio.addEventListener('change', () => {
          if (radio.checked) {
            specialityInput.value = radio.value;
            // Optionally hide after selection, or keep it open until blur
            // specialityRadioContainer.classList.add('hidden'); 
          }
        });
      });
      
      // If user types in the input, uncheck radio buttons
      specialityInput.addEventListener('input', () => {
        specialityOptionRadioButtons.forEach(radio => {
            radio.checked = false;
        });
      });
    }

  });
</script>

<%- /* Remove old style block */ %>
<% /* <style> ... </style> */ %>

</rewritten_file> 
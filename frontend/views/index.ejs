<%- contentFor('body') %>

<!-- Conference Landing Page - Single-screen layout for auditorium projection -->
<div class="h-screen w-screen flex flex-col relative">
  <!-- Background with image3.png as stretched background -->
  <div class="absolute inset-0 z-0">
    <!-- <img src="/images/backdrop.jpeg" alt="Background" class="w-full h-full object-cover opacity-80"> -->
    <img src="/images/backdrop.jpg" alt="Background" class="w-full h-full object-fill opacity-80">
  </div>
  
  <!-- Bỏ phần header và logo -->
  <!-- Header Section -->
  <!-- <header class="py-4 px-8 flex items-center justify-start relative z-10"> -->
    <!-- <div class="flex items-center"> -->
      <!-- Logo/Favicon -->
      <!-- <img src="/images/favicon.png" alt="Logo" class="h-16 w-16 mr-4"> -->
      <!-- Institution Name -->
      <!-- <h1 class="text-4xl font-bold text-green-800">Học viện Quân y</h1> -->
    <!-- </div> -->
  <!-- </header> -->
  
  <!-- Main Banner Area - Left aligned, 1/2 width, white text with blue outline -->
  <!-- <section class="flex-grow flex items-center px-8 py-6 relative z-10" style="top: -150px;"> -->
    <!-- <div class="w-1/2 text-left"> -->
      <!-- <h2 class="text-6xl font-bold mb-2 text-white" style="text-shadow: -1px -1px 0 #2563eb, 1px -1px 0 #2563eb, -1px 1px 0 #2563eb, 1px 1px 0 #2563eb, 2px 2px 4px rgba(0,0,0,0.5);"> -->
        <!-- <span class="title-line block opacity-0 animate-fade-in-up animation-delay-0s">Ứng dụng chuyển đổi số</span> -->
        <!-- <span class="title-line block opacity-0 animate-fade-in-up animation-delay-1s">trong đào tạo Y Dược</span> -->
        <!-- <span class="title-line block opacity-0 animate-fade-in-up animation-delay-2s">tại Học viện Quân y</span> -->
      <!-- </h2> -->
    <!-- </div> -->
  <!-- </section> -->

  <!-- Bottom Sections Container - for proper positioning -->
  <!--
  <div class="mt-auto px-8 pb-4 flex justify-between relative z-10">
    
   
    
    <div class="w-1/2 mx-auto overflow-hidden">
      <% if (typeof speakers !== 'undefined' && speakers.length > 0) { %>
        <div class="speakers-slider relative w-full">
          <div class="speakers-track flex transition-transform duration-500 ease-in-out" style="transform: translateX(0);">
            <% speakers.forEach(speaker => { %>
              <div class="speaker-slide w-1/3 flex-shrink-0 px-2">
                <div class="text-center">
                  <div class="w-24 h-24 rounded-full overflow-hidden mx-auto border-2 border-blue-600">
                    <% if (speaker.avatarUrl && speaker.avatarUrl !== '') { %>
                      <img src="<%= speaker.avatarUrl %>" alt="<%= speaker.fullName %>" class="w-full h-full object-cover">
                    <% } else { %>
                      <img src="/images/default-avatar.png" alt="Default Avatar" class="w-full h-full object-cover"> 
                    <% } %>
                  </div>
                  <p class="text-xl font-bold mt-2 text-white" style="text-shadow: 1px 1px 2px rgba(0,0,0,0.8);">
                    <%= [speaker.rank, speaker.academic, speaker.fullName].filter(Boolean).join(' ') %>
                  </p>
                  <p class="text-sm text-white" style="text-shadow: 1px 1px 2px rgba(0,0,0,0.8);">
                    <%= [speaker.position, speaker.workUnit].filter(Boolean).join(', ') %>
                  </p>
                </div>
              </div>
            <% }) %>
          </div>
          
          <% if (speakers.length > 3) { // Only show dots if there are more slides than visible %>
            <div class="flex justify-center mt-4 speaker-dots-container">
              <% for(let i = 0; i < Math.ceil(speakers.length / 3); i++) { %> 
                <div class="speaker-dot <%= i === 0 ? 'active bg-white' : 'bg-gray-400' %> w-2 h-2 rounded-full mx-1 cursor-pointer"></div>
              <% } %>
            </div>
          <% } %>
        </div>
      <% } else { %>
        <p class="text-center text-white text-xl">No speakers to display.</p>
      <% } %>
    </div>
  </div>
-->
  <!-- Footer -->
  <footer class="border-t border-blue-300 pt-3 text-center relative z-10">
    <p class="text-xl text-white" style="text-shadow: 1px 1px 2px rgba(0,0,0,0.8);">&copy; Học viện Quân y - All rights reserved</p>
  </footer>

  <!-- QR Code (Moved to Bottom Left) -->
  <div class="absolute bottom-20 left-20 bg-white p-3 rounded-lg shadow-md z-20" id="qrCodeContainer">
    <img id="register-qr-code" src="" alt="Registration QR Code" class="h-32 w-32 border border-gray-200 bg-gray-50" style="min-width: 200px; min-height: 200px;">
  </div>
</div>

<%- contentFor('script') %>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // QR Code Logic
    const qrCodeElement = document.getElementById('register-qr-code');
    const qrCodeContainer = document.getElementById('qrCodeContainer'); // Get container
    let qrCodeUrl = '/api/qrcode';
    // You might want to pass conference code to qrCodeUrl if latestConference is available
    const conferenceCode = "<%= typeof conference !== 'undefined' && conference ? conference.code : '' %>";
    if (conferenceCode) {
      qrCodeUrl += `?code=${conferenceCode}`;
    }

    fetch(qrCodeUrl)
      .then(response => response.json())
      .then(data => {
        if (qrCodeElement) { 
          qrCodeElement.src = data.qrCodeDataUrl;
          if (qrCodeContainer) { // Check if container exists
            setTimeout(() => {
                if (qrCodeContainer) qrCodeContainer.style.display = 'none'; // Hide container
            }, 120000); // 60000 milliseconds = 1 minute
          }
        }
      })
      .catch(error => { 
        console.error('Error fetching QR code:', error);
        if(qrCodeElement) {
            qrCodeElement.alt = "Error loading QR Code";
        }
        if (qrCodeContainer) qrCodeContainer.style.display = 'none'; // Hide on error too
      });

    // Title Animation Logic (assuming it exists and is needed)
    const titleLines = document.querySelectorAll('.title-line');
    function runTitleAnimation() {
      titleLines.forEach(line => {
        line.classList.remove('animate-fade-in-up');
        line.style.opacity = '0';
        void line.offsetWidth;
        line.classList.add('animate-fade-in-up');
      });
    }
    if (titleLines.length > 0) {
        runTitleAnimation(); 
        setInterval(runTitleAnimation, 10000);
    }

    // Speakers slider functionality
    const speakersTrack = document.querySelector('.speakers-track');
    const speakerSlides = document.querySelectorAll('.speaker-slide');
    const dotsContainer = document.querySelector('.speaker-dots-container');
    
    if (speakersTrack && speakerSlides.length > 0) {
      const visibleSlides = 3; // Number of slides visible at once
      const totalSlides = speakerSlides.length;
      const slideWidthPercentage = 100 / visibleSlides; 
      // Adjust slide width if using flex-shrink-0 on slides that are themselves 1/3 width
      // For the current HTML (w-1/3 on slide), slideWidthPercentage should actually be based on how many groups of 3 you have.
      // Let's simplify: each slide is 1/3, so to move one full set of 3 slides, it's 100%.
      // To move one slide at a time when 3 are visible means each step is 33.33% of the track width.

      let numPages = Math.ceil(totalSlides / visibleSlides);
      if (dotsContainer && totalSlides <= visibleSlides) {
          dotsContainer.style.display = 'none';
      }

      let currentSlideGroup = 0;
      let slidingInterval = null;

      function updateDynamicSliderPosition() {
        speakersTrack.style.transform = `translateX(-${currentSlideGroup * 100}%)`; // Move by 100% to show next set of 3
        const speakerDots = dotsContainer ? dotsContainer.querySelectorAll('.speaker-dot') : [];
        speakerDots.forEach((dot, index) => {
          if (index === currentSlideGroup) {
            dot.classList.add('active', 'bg-white');
            dot.classList.remove('bg-gray-400');
          } else {
            dot.classList.remove('active', 'bg-white');
            dot.classList.add('bg-gray-400');
          }
        });
      }

      function startDynamicSliding() {
        if (slidingInterval) clearInterval(slidingInterval);
        if (numPages > 1) {
          slidingInterval = setInterval(() => {
            currentSlideGroup = (currentSlideGroup + 1) % numPages;
            updateDynamicSliderPosition();
          }, 5000);
        }
      }

      if (dotsContainer) {
        const speakerDots = dotsContainer.querySelectorAll('.speaker-dot');
        speakerDots.forEach((dot, index) => {
            dot.addEventListener('click', () => {
                currentSlideGroup = index;
                updateDynamicSliderPosition();
                startDynamicSliding(); 
            });
        });
      }
      startDynamicSliding(); 
    }    
  });
</script> 